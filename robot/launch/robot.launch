<launch>
  


    <!-- Load robot -->
    <include file="$(find husky_gazebo)/launch/playpen.launch" />

    <arg name="robot_namespace" default="/"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="0.0"/>
    <arg name="enable_ekf" default="$(optenv ENABLE_EKF true)"/>

    <!-- Load robot description -->
    <include file="$(find husky_description)/launch/description.launch" />
    
    

    <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg robot_namespace)" />


    
    
    <!-- Load controller configuration -->
    <rosparam command="load" file="$(find robot)/config/my_diff_drive.yaml" />

    <!-- Spawn controllers -->
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>

    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
        <remap from="cmd_vel_out" to="/husky_velocity_controller/cmd_vel"/>
    </node>


    <!-- Start EKF for localization -->
    <group if="$(arg enable_ekf)" >
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
        </node>
    </group>


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot)/rviz/my_robot.rviz" output="screen"/>

    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

    <include file="$(find husky_navigation)/launch/amcl_demo.launch" />

    <include file="$(find simple_navigation_goals)/launch/sim_nav_goal.launch" />

</launch>